{% extends 'base.html.twig' %}

{% block title %}Hello DashboardController!{% endblock %}

{% block body %}
<div class= "white-windows" style ='overflow:scroll; max-height: 800px;'>
<section class= "div_projet_creation">
<table class="table">
<thead>
 <tr>
      <th scope="col">Noms</th>
      <th scope="col">Crée le :</th>
      <th scope="col">Langue</th>
      <th scope="col">Sources</th>
       <th scope="col">Traduction</th>
       <th scope="col">Contenu</th>
    </tr>
</thead>

{% for data in dataTraduction %}
<tbody>
 <tr>
     <td class = "projects">{{data["name"]}}</td>
     <td> {{data["datecreation"] | format_datetime(locale = 'fr' , pattern = "EEEE dd MMMM YYYY")}}</td>
     <td>{{data["langue"]}}</td>
      <td class = "nbContenu">{{data["datasource"]}}</td>
       <td class = "nbTraduction">{{data["datatraduction"]}}</td>   
       <td class = "source">{{data["content"]}}</td> 
  
</tr>
    </tbody>
{% endfor %}
</section>

<div style = "width:800px">
  <canvas id="myChart"></canvas>
</div>
</div>

<form class="row g-3">
   <div class="col-auto">
    <label for="langue" class="visually-hidden">Langue</label>
    <input type="text" class="form-control" id="langue" placeholder="Langue">
  </div>

  <div class="col-auto">
    <button id = "confirm" type="submit" class="btn btn-primary mb-3">Confirm</button>
  </div>
</form>


<script>

 mytab = []
 arraynbContenu = []
 arraytraduct = []

 const windows = document.querySelector(".white-windows");
  const ctx = document.getElementById('myChart');
  const pr = document.querySelectorAll('.projects')
   const nbcontenu = document.querySelectorAll('.nbContenu')
 const nbtraduction = document.querySelectorAll('.nbTraduction')
  const source = document.querySelectorAll('.source')
   const choicelangue = document.getElementById('langue');
   const confirmbutton = document.getElementById('confirm')

  for (let i = 0 ; i < pr.length ; i+=1){
    mytab.push(pr[i].innerText)
  }
 for (let i = 0 ; i < nbcontenu.length ; i+=1){
    arraynbContenu.push(nbcontenu[i].innerText)
  }

   for (let i = 0 ; i < nbtraduction.length ; i+=1){
    arraytraduct.push(nbtraduction[i].innerText)
  }
  const mixedChart = new Chart(ctx, {
    data: {
        datasets: [{
            type: 'bar',
            label: 'Sources',
            data : arraynbContenu,

        }, {
            type: 'bar',
            label: 'Sources traduites',
            data: arraytraduct, 
        }],
        labels: mytab
    },

    options: {
        responsive: true,
    plugins: {
      title: {
        display: true,
        text: 'Les sources et Projets'
      }
    },
      scales: {
        y: {
          beginAtZero: true,
          max: 20,
        }
      }
    }
   
});

{# console.log(project_profil); #}
   
  
   let projectsdata=[]

 for (let k = 0 ; k < source.length ; k+=1){
  
    projectsdata.push({key :pr[k].innerText , traduction : source[k].innerText });

  }


const csvData = Papa.unparse(projectsdata, {header : true, delimiter : ';'});

const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });
const url = URL.createObjectURL(blob);
const link = document.createElement("a");

link.setAttribute("href", url);
link.setAttribute("download", `text.csv`);

{# link.innerText = "télécharger en csv" #}
windows.appendChild(link);

confirmbutton.addEventListener('click', function(){
  link.download = `${choicelangue.value}`;
  link.click();
})

console.log(csvData);
</script>


{% endblock %}
